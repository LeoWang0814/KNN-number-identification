import pygame, sys, time, math
import numpy as np
import scipy.ndimage
 
# In this program, all the data is expressed in a 20*20=400 lenth list.
pixel = 20
pixel_lenth = 10
 
 
def get_graph():
    pygame.init()
    size = width, height = pixel * pixel_lenth, pixel * pixel_lenth
    screen = pygame.display.set_mode(size)
    pygame.display.set_caption("input screen")
    screen.fill('white')
    graph_list = []
    for i in range(pixel):
        graph_list.append([])
        for j in range(pixel):
            graph_list[i].append(0)
    down = 0
    breaking = 0
 
    def draw_graph(screen, graph_list):
        for i in range(pixel):
            for j in range(pixel):
                if graph_list[j][i] == 1:
                    pygame.draw.polygon(screen, 'black',
                                        [(pixel_lenth * i, pixel_lenth * j),
                                         (pixel_lenth * i + pixel_lenth, pixel_lenth * j),
                                         (pixel_lenth * i + pixel_lenth, pixel_lenth * j + pixel_lenth),
                                         (pixel_lenth * i, pixel_lenth * j + pixel_lenth)], width=0)
 
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                breaking = 1
                break
            if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_presses = pygame.mouse.get_pressed()
                if mouse_presses[0]:
                    # print("Left Mouse key was clicked")
                    down = 1
            if event.type == pygame.MOUSEBUTTONUP:
                down = 0
        if down == 1:
            # print(int(pygame.mouse.get_pos()[0]/10),int(pygame.mouse.get_pos()[1]/10))
            graph_list[int(pygame.mouse.get_pos()[1] / pixel_lenth)][int(pygame.mouse.get_pos()[0] / pixel_lenth)] = 1
        if breaking == 1:
            break
        draw_graph(screen, graph_list)
        pygame.display.update()
 
    final = []
    for i in range(pixel):
        for j in range(pixel):
            final.append(graph_list[i][j])
    return (final)
 
 
# output: 1d list
 
def from_1d_to_2d(a, x, y):
    b = []
    for i in range(y):
        b.append([])
        for j in range(x):
            b[i].append(a[x * i + j])
    return (b)
 
 
def from_2d_to_1d(a):
    x = len(a[0])
    y = len(a)
    b = []
    for i in range(y):
        for j in range(x):
            b.append(a[i][j])
    return (b)
 
 
def distance(point1, point2):
    if len(point1) != len(point2):
        print('Not The Same Dimension.')
        return (-1)
    square = 0
    for i in range(len(point1)):
        square += abs(point1[i] - point2[i]) ** 2
    return (float(square ** 0.5))
 
 
def average(lists):
    final = []
    for i in range(pixel * pixel):
        final.append(0)
    for times in range(len(lists)):
        for j in range(pixel * pixel):
            final[j] += lists[times][j]
    for j in range(pixel * pixel):
        final[j] = float(final[j]) / len(lists)
    return (final)
 
 
def from_1d_to_2d(a, x, y):
    b = []
    for i in range(y):
        b.append([])
        for j in range(x):
            b[i].append(a[x * i + j])
    return (b)
 
 
def cut(target_2d_list):
    output_list = []
    for i in range(20):
        blank_line = 0
        for j in range(20):
            if target_2d_list[i][j] != 0:
                blank_line = 1
        if blank_line == 1:
            output_list.append(target_2d_list[i])
    final = []
    for i in range(len(output_list)):
        final.append([])
    for j in range(20):
        blank_column = 0
        for i in range(len(output_list)):
            if output_list[i][j] != 0:
                blank_column = 1
        if blank_column == 1:
            for i in range(len(output_list)):
                final[i].append(output_list[i][j])
    return (final)
 
 
def stectch(twoDlist):
    scipy.ndimage.zoom(twoDlist, (20 / len(twoDlist), 20 / len(twoDlist[0])))
    output = []
    for i in range(len(scipy.ndimage.zoom(twoDlist, (20 / len(twoDlist), 20 / len(twoDlist[0]))))):
        output.append([])
        for j in range(len(scipy.ndimage.zoom(twoDlist, (20 / len(twoDlist), 20 / len(twoDlist[0])))[0])):
            output[i].append(scipy.ndimage.zoom(twoDlist, (20 / len(twoDlist), 20 / len(twoDlist[0])))[i][j])
    return (scipy.ndimage.zoom(twoDlist, (20 / len(twoDlist), 20 / len(twoDlist[0]))))
 
def praparing_data_set():
    train0 = [0.0, 0.0, 0.1, 0.25, 0.55, 0.55, 0.8, 0.85, 0.95, 0.95, 1.0, 0.9, 0.85, 0.85, 0.6, 0.45, 0.1, 0.05, 0.0,
              0.0,
              0.05, 0.05, 0.5, 0.65, 0.8, 0.8, 0.6, 0.35, 0.35, 0.3, 0.3, 0.4, 0.55, 0.8, 0.9, 0.75, 0.55, 0.4, 0.0,
              0.0,
              0.05, 0.35, 0.65, 0.8, 0.75, 0.5, 0.45, 0.2, 0.1, 0.05, 0.1, 0.15, 0.2, 0.5, 0.6, 0.85, 0.95, 0.55, 0.05,
              0.0,
              0.35, 0.5, 0.75, 0.8, 0.4, 0.25, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.45, 0.95, 0.9, 0.25,
              0.25,
              0.55, 0.65, 0.75, 0.55, 0.2, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.65, 0.85, 0.65,
              0.65,
              0.65, 0.85, 0.55, 0.4, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.5, 0.9, 0.8,
              0.7,
              0.9, 0.45, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15, 0.25, 0.9, 0.9, 0.8,
              0.95,
              0.25, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.1, 0.95, 0.95, 0.95, 1.0,
              0.15,
              0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 1.0, 1.0, 1.0, 0.95, 0.1,
              0.05,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.95, 1.0, 0.95, 0.9, 0.05, 0.05,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 1.0, 1.0, 0.95, 0.95, 0.05, 0.05, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.15, 0.95, 0.85, 0.9, 0.85, 0.2, 0.1, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.3, 0.85, 0.85, 0.8, 0.9, 0.25, 0.1, 0.05, 0.05, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.4, 0.9, 0.65, 0.8, 0.85, 0.35, 0.25, 0.1, 0.05, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.35, 0.55, 0.6, 0.6, 0.7, 0.8, 0.4, 0.3, 0.15, 0.05, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.1, 0.2, 0.55, 0.7, 0.65, 0.5, 0.55, 0.6, 0.6, 0.55, 0.25, 0.15, 0.1, 0.1, 0.05, 0.0,
              0.0, 0.0, 0.05, 0.15, 0.35, 0.4, 0.75, 0.8, 0.3, 0.25, 0.25, 0.6, 0.75, 0.7, 0.4, 0.25, 0.2, 0.2, 0.1,
              0.1,
              0.15, 0.25, 0.5, 0.6, 0.7, 0.8, 0.75, 0.35, 0.25, 0.05, 0.25, 0.25, 0.75, 0.75, 0.6, 0.5, 0.35, 0.3, 0.25,
              0.2, 0.25, 0.55, 0.65, 0.6, 0.75, 0.5, 0.4, 0.3, 0.05, 0.05, 0.0, 0.0, 0.35, 0.5, 0.8, 0.85, 0.9, 0.9,
              0.95,
              0.9, 0.95, 0.85, 0.8, 0.75, 0.35, 0.3, 0.1, 0.05, 0.05, 0.05]
 
    train1 = [0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65,
              0.65,
              0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65,
              0.65,
              0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65,
              0.65,
              0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.85, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65,
              0.65,
              0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.75, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7,
              0.7,
              0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.75,
              0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85,
              0.85,
              0.85, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9,
              0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.85, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9,
              0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.85, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9,
              0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.75,
              0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.85, 0.85, 0.85, 0.85, 0.85, 0.8, 0.8, 0.8, 0.8,
              0.8,
              0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.7, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8,
              0.8,
              0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.75, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85,
              0.85,
              0.85, 0.85, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.65, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.9,
              0.9, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9,
              0.7,
              0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.7, 0.7,
              0.7,
              0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85]
 
    train2 = [0.0, 0.0, 0.1, 0.4, 0.55, 0.7, 0.8, 0.85, 0.95, 0.85, 0.85, 0.8, 0.65, 0.4, 0.25, 0.1, 0.05, 0.0, 0.0,
              0.0,
              0.35, 0.35, 0.8, 0.85, 0.8, 0.75, 0.55, 0.5, 0.35, 0.45, 0.55, 0.55, 0.7, 0.7, 0.4, 0.35, 0.1, 0.05, 0.0,
              0.0,
              0.35, 0.75, 0.85, 0.8, 0.75, 0.45, 0.4, 0.3, 0.25, 0.2, 0.25, 0.45, 0.65, 0.7, 0.7, 0.4, 0.35, 0.15, 0.05,
              0.0, 0.6, 0.65, 0.5, 0.3, 0.2, 0.15, 0.0, 0.0, 0.0, 0.0, 0.05, 0.2, 0.3, 0.65, 0.5, 0.4, 0.4, 0.2, 0.1,
              0.0,
              0.35, 0.35, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.45, 0.55, 0.45, 0.3, 0.2, 0.1, 0.0,
              0.35, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.4, 0.45, 0.55, 0.45, 0.2, 0.1, 0.0,
              0.15, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.1, 0.4, 0.5, 0.5, 0.5, 0.2, 0.1, 0.0,
              0.05,
              0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.2, 0.3, 0.55, 0.5, 0.4, 0.2, 0.05, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.2, 0.45, 0.65, 0.5, 0.4, 0.2, 0.05, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.05, 0.3, 0.4, 0.6, 0.65, 0.4, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.25, 0.4, 0.6, 0.7, 0.5, 0.25, 0.15, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.1, 0.2, 0.35, 0.65, 0.55, 0.55, 0.4, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.1, 0.2, 0.4, 0.6, 0.75, 0.5, 0.4, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1,
              0.3, 0.5, 0.7, 0.75, 0.55, 0.35, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.2, 0.5,
              0.65, 0.65, 0.75, 0.6, 0.3, 0.2, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.3, 0.55, 0.7,
              0.85, 0.6, 0.5, 0.25, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.05, 0.5, 0.75, 0.85, 0.9,
              0.65, 0.45, 0.2, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.15, 0.15, 0.8, 0.8, 0.95,
              0.75,
              0.6, 0.55, 0.45, 0.4, 0.4, 0.4, 0.4, 0.4, 0.45, 0.45, 0.45, 0.55, 0.4, 0.4, 0.2, 0.7, 0.8, 0.95, 0.95,
              0.85,
              0.6, 0.45, 0.45, 0.35, 0.35, 0.4, 0.45, 0.5, 0.45, 0.45, 0.55, 0.55, 0.55, 0.4, 0.7, 0.75, 1.0, 1.0, 0.9,
              0.85, 0.75, 0.65, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.55, 0.6, 0.7, 0.7, 0.7]
 
    train3 = [0.1, 0.1, 0.6, 0.6, 0.85, 0.9, 0.9, 0.9, 0.95, 0.95, 1.0, 1.0, 1.0, 1.0, 0.85, 0.8, 0.5, 0.4, 0.05, 0.05,
              0.45, 0.5, 0.8, 0.8, 0.45, 0.25, 0.15, 0.1, 0.1, 0.1, 0.05, 0.1, 0.2, 0.3, 0.5, 0.6, 0.85, 0.85, 0.35,
              0.35,
              0.45, 0.45, 0.6, 0.4, 0.25, 0.05, 0.05, 0.1, 0.1, 0.05, 0.0, 0.0, 0.05, 0.15, 0.2, 0.5, 0.7, 0.75, 0.8,
              0.55,
              0.1, 0.05, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.55, 0.9, 0.8,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.25, 0.9, 0.9, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.45, 0.55, 0.8, 0.85, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.55, 0.6, 0.8, 0.55, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.35, 0.45, 0.55, 0.85, 0.8, 0.45, 0.4, 0.05, 0.05, 0.1, 0.1,
              0.1,
              0.1, 0.1, 0.15, 0.15, 0.2, 0.3, 0.35, 0.55, 0.6, 0.85, 0.85, 0.65, 0.55, 0.1, 0.1, 0.1, 0.1, 0.45, 0.45,
              0.65,
              0.65, 0.7, 0.7, 0.75, 0.75, 0.8, 0.85, 0.85, 0.9, 0.8, 0.6, 0.35, 0.15, 0.0, 0.0, 0.05, 0.05, 0.5, 0.6,
              0.85,
              0.85, 0.85, 0.85, 0.85, 0.85, 0.95, 0.9, 0.85, 0.9, 0.85, 0.55, 0.2, 0.15, 0.1, 0.0, 0.0, 0.0, 0.05, 0.1,
              0.15, 0.2, 0.15, 0.2, 0.15, 0.15, 0.2, 0.3, 0.6, 0.7, 0.8, 0.7, 0.6, 0.35, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.1, 0.15, 0.25, 0.55, 0.75, 0.85, 0.7, 0.35, 0.2, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.25, 0.65, 0.85, 0.5, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.45, 0.6, 0.6, 0.45, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.5, 0.55, 0.55, 0.5, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.15, 0.35, 0.65, 0.8, 0.5, 0.45, 0.55, 0.25, 0.15, 0.1, 0.1, 0.15, 0.05,
              0.05,
              0.05, 0.05, 0.1, 0.2, 0.2, 0.35, 0.55, 0.85, 0.75, 0.8, 0.45, 0.15, 0.6, 0.6, 0.25, 0.25, 0.2, 0.15, 0.15,
              0.1, 0.15, 0.15, 0.2, 0.25, 0.35, 0.55, 0.85, 0.8, 0.6, 0.5, 0.1, 0.1, 0.6, 0.6, 0.9, 0.9, 0.95, 0.95,
              1.0,
              0.95, 0.95, 0.95, 0.9, 0.8, 0.75, 0.75, 0.5, 0.45, 0.05, 0.0, 0.0, 0.0]
 
    train4 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.3, 0.3, 0.6, 0.55, 0.25, 0.1, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.05, 0.35, 0.5, 0.55, 0.5, 0.4, 0.15, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.25, 0.4, 0.7, 0.6, 0.45, 0.2, 0.1, 0.2, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.3, 0.4, 0.75, 0.7, 0.55, 0.05, 0.05, 0.25, 0.45, 0.25, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.05,
              0.4, 0.5, 0.65, 0.55, 0.2, 0.05, 0.05, 0.4, 0.7, 0.5, 0.25, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15,
              0.6, 0.8, 0.5, 0.35, 0.05, 0.0, 0.0, 0.45, 0.7, 0.4, 0.25, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.55,
              0.9,
              0.7, 0.2, 0.0, 0.0, 0.0, 0.05, 0.45, 0.65, 0.45, 0.25, 0.1, 0.05, 0.05, 0.0, 0.0, 0.0, 0.15, 0.5, 0.85,
              0.8,
              0.3, 0.1, 0.0, 0.0, 0.0, 0.05, 0.45, 0.65, 0.4, 0.25, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.4, 0.95, 0.85,
              0.45,
              0.1, 0.05, 0.0, 0.0, 0.0, 0.05, 0.5, 0.6, 0.4, 0.3, 0.2, 0.1, 0.05, 0.05, 0.05, 0.05, 0.8, 0.95, 0.75,
              0.35,
              0.25, 0.2, 0.25, 0.25, 0.25, 0.3, 0.65, 0.7, 0.5, 0.4, 0.4, 0.25, 0.25, 0.25, 0.35, 0.35, 0.9, 0.95, 0.75,
              0.6, 0.6, 0.65, 0.6, 0.6, 0.65, 0.75, 0.85, 0.9, 0.75, 0.7, 0.65, 0.6, 0.6, 0.65, 0.7, 0.7, 0.45, 0.6,
              0.55,
              0.5, 0.5, 0.4, 0.4, 0.4, 0.45, 0.5, 0.7, 0.8, 0.75, 0.7, 0.65, 0.55, 0.55, 0.5, 0.35, 0.35, 0.3, 0.3,
              0.25,
              0.3, 0.25, 0.2, 0.2, 0.2, 0.2, 0.25, 0.6, 0.7, 0.45, 0.35, 0.3, 0.2, 0.15, 0.15, 0.15, 0.15, 0.05, 0.05,
              0.05,
              0.05, 0.05, 0.05, 0.05, 0.05, 0.0, 0.1, 0.6, 0.65, 0.25, 0.2, 0.15, 0.05, 0.05, 0.05, 0.05, 0.05, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.6, 0.65, 0.2, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.6, 0.65, 0.2, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.1, 0.2, 0.6, 0.6, 0.2, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.1, 0.2, 0.55, 0.55, 0.2, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.1, 0.2, 0.5, 0.55, 0.2, 0.2, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.1, 0.25, 0.55, 0.55, 0.25, 0.25, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0]
 
    train5 = [0.0, 0.05, 0.2, 0.2, 0.25, 0.35, 0.65, 0.65, 0.55, 0.45, 0.45, 0.45, 0.5, 0.5, 0.5, 0.55, 0.55, 0.55, 0.6,
              0.6, 0.0, 0.0, 0.2, 0.2, 0.4, 0.4, 0.7, 0.65, 0.65, 0.55, 0.4, 0.4, 0.35, 0.35, 0.35, 0.3, 0.3, 0.3, 0.3,
              0.3,
              0.0, 0.0, 0.2, 0.2, 0.4, 0.45, 0.6, 0.65, 0.55, 0.45, 0.4, 0.45, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.3, 0.3,
              0.0,
              0.0, 0.2, 0.2, 0.45, 0.55, 0.8, 0.6, 0.25, 0.2, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.1, 0.05, 0.05,
              0.05, 0.05, 0.25, 0.2, 0.6, 0.55, 0.65, 0.4, 0.1, 0.05, 0.05, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.05, 0.05, 0.25, 0.25, 0.55, 0.55, 0.5, 0.25, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.1, 0.1, 0.15, 0.2, 0.6, 0.55, 0.5, 0.2, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.15,
              0.1, 0.2, 0.35, 0.65, 0.5, 0.45, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15,
              0.15,
              0.2, 0.25, 0.65, 0.65, 0.4, 0.25, 0.3, 0.3, 0.35, 0.3, 0.25, 0.15, 0.1, 0.1, 0.05, 0.0, 0.0, 0.0, 0.15,
              0.15,
              0.25, 0.35, 0.7, 0.75, 0.8, 0.7, 0.7, 0.7, 0.65, 0.65, 0.6, 0.55, 0.3, 0.25, 0.1, 0.1, 0.0, 0.0, 0.15,
              0.15,
              0.3, 0.3, 0.55, 0.7, 0.85, 0.8, 0.65, 0.5, 0.55, 0.6, 0.65, 0.75, 0.75, 0.6, 0.35, 0.25, 0.0, 0.0, 0.1,
              0.15,
              0.15, 0.2, 0.25, 0.3, 0.3, 0.25, 0.25, 0.25, 0.2, 0.2, 0.4, 0.6, 0.75, 0.85, 0.65, 0.5, 0.25, 0.2, 0.0,
              0.0,
              0.0, 0.05, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.5, 0.5, 0.75, 0.7, 0.4, 0.3, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.25, 0.55, 0.6, 0.35, 0.35, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.25, 0.5, 0.5, 0.4, 0.4, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.25, 0.55, 0.45, 0.45, 0.4, 0.1, 0.05, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.25, 0.4, 0.7, 0.75, 0.35, 0.35, 0.8, 0.65, 0.5, 0.3, 0.15,
              0.05, 0.05, 0.05, 0.0, 0.0, 0.05, 0.25, 0.35, 0.45, 0.65, 0.95, 0.85, 0.65, 0.35, 0.1, 0.8, 0.8, 0.65,
              0.6,
              0.4, 0.2, 0.15, 0.1, 0.1, 0.1, 0.2, 0.4, 0.6, 0.75, 0.9, 0.9, 0.6, 0.5, 0.05, 0.05, 0.3, 0.3, 0.65, 0.7,
              0.8,
              0.9, 1.0, 1.0, 1.0, 1.0, 0.95, 0.85, 0.75, 0.65, 0.4, 0.3, 0.05, 0.05, 0.0, 0.0]
 
    train6 = [0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.15, 0.25, 0.3, 0.55, 0.6, 0.55, 0.7, 0.6, 0.4, 0.15, 0.1, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.05, 0.15, 0.15, 0.2, 0.25, 0.45, 0.5, 0.7, 0.8, 0.65, 0.45, 0.3, 0.15, 0.05, 0.05, 0.0,
              0.0,
              0.0, 0.0, 0.05, 0.1, 0.2, 0.2, 0.4, 0.55, 0.8, 0.8, 0.65, 0.5, 0.25, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.15, 0.2, 0.25, 0.35, 0.65, 0.8, 0.7, 0.55, 0.35, 0.2, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05,
              0.05, 0.25, 0.25, 0.55, 0.65, 0.8, 0.5, 0.4, 0.25, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.1,
              0.1, 0.5, 0.55, 0.85, 0.75, 0.65, 0.3, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1,
              0.1,
              0.75, 0.8, 0.75, 0.45, 0.3, 0.15, 0.05, 0.05, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4,
              0.45,
              0.85, 0.85, 0.75, 0.45, 0.2, 0.25, 0.3, 0.3, 0.25, 0.15, 0.15, 0.15, 0.05, 0.05, 0.05, 0.0, 0.0, 0.0,
              0.55,
              0.55, 0.9, 0.9, 0.75, 0.65, 0.65, 0.6, 0.6, 0.6, 0.5, 0.55, 0.4, 0.35, 0.3, 0.25, 0.15, 0.05, 0.0, 0.0,
              0.75,
              0.75, 0.8, 0.6, 0.45, 0.4, 0.45, 0.45, 0.5, 0.5, 0.6, 0.7, 0.75, 0.85, 0.8, 0.7, 0.45, 0.35, 0.15, 0.15,
              0.9,
              0.9, 0.5, 0.35, 0.2, 0.15, 0.15, 0.15, 0.25, 0.25, 0.3, 0.35, 0.35, 0.5, 0.6, 0.8, 0.8, 0.8, 0.3, 0.25,
              1.0,
              1.0, 0.25, 0.1, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.1, 0.2, 0.55, 0.7, 0.85, 0.55, 0.5, 1.0,
              1.0,
              0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.35, 0.55, 0.8, 0.7, 1.0, 1.0,
              0.1,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.2, 0.35, 1.0, 1.0, 1.0, 1.0, 0.15,
              0.05,
              0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15, 0.15, 0.35, 1.0, 1.0, 0.9, 0.9, 0.4, 0.25,
              0.1,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.15, 0.25, 0.35, 0.85, 0.85, 0.75, 0.85, 0.85, 0.6,
              0.3,
              0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.3, 0.55, 0.75, 0.7, 0.7, 0.45, 0.7, 0.95, 1.0, 0.75,
              0.5,
              0.15, 0.15, 0.15, 0.05, 0.05, 0.1, 0.1, 0.15, 0.4, 0.7, 0.85, 0.95, 0.65, 0.5, 0.15, 0.15, 0.7, 0.95, 0.9,
              0.8, 0.65, 0.55, 0.4, 0.35, 0.25, 0.25, 0.4, 0.75, 0.85, 0.95, 0.9, 0.65, 0.3, 0.3, 0.0, 0.0, 0.15, 0.2,
              0.4,
              0.65, 0.7, 0.85, 0.9, 0.95, 0.95, 0.9, 0.9, 0.85, 0.8, 0.45, 0.3, 0.2, 0.0, 0.0]
 
    train7 = [0.9, 0.9, 0.85, 0.85, 0.85, 0.85, 0.85, 0.85, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.85, 0.8, 0.8, 0.8, 0.8, 0.8,
              0.15, 0.15, 0.15, 0.1, 0.1, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.25, 0.3, 0.35, 0.7, 0.95, 0.95, 0.95,
              0.65,
              0.15, 0.1, 0.05, 0.1, 0.15, 0.15, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.25, 0.4, 0.65, 0.95, 0.95, 0.65,
              0.65,
              0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.3, 0.6, 0.7, 0.85, 0.8, 0.2,
              0.2,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.2, 0.5, 0.65, 0.8, 0.7, 0.4, 0.1, 0.05,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.2, 0.4, 0.6, 0.75, 0.6, 0.35, 0.25, 0.05, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.2, 0.35, 0.65, 0.7, 0.75, 0.55, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.1, 0.25, 0.4, 0.6, 0.75, 0.55, 0.35, 0.05, 0.05, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.15, 0.3, 0.55, 0.9, 0.6, 0.3, 0.2, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.05, 0.05, 0.05, 0.05, 0.2, 0.55, 0.75, 0.7, 0.4, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.05, 0.05, 0.1, 0.15, 0.15, 0.25, 0.6, 0.7, 0.6, 0.35, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.0, 0.05, 0.05, 0.1, 0.25, 0.25, 0.45, 0.65, 0.65, 0.55, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.05,
              0.05, 0.05, 0.05, 0.15, 0.35, 0.4, 0.55, 0.7, 0.45, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.05,
              0.05, 0.05, 0.1, 0.15, 0.45, 0.6, 0.75, 0.5, 0.2, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05,
              0.05, 0.1, 0.1, 0.15, 0.45, 0.5, 0.7, 0.4, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05,
              0.05,
              0.15, 0.1, 0.3, 0.5, 0.6, 0.75, 0.3, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.0, 0.0,
              0.2,
              0.35, 0.4, 0.6, 0.65, 0.6, 0.25, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.0, 0.05,
              0.35,
              0.35, 0.55, 0.7, 0.55, 0.45, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.05, 0.05,
              0.35,
              0.35, 0.55, 0.5, 0.5, 0.3, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.05, 0.05,
              0.35,
              0.35, 0.6, 0.45, 0.45, 0.25, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
 
    train8 = [0.0, 0.0, 0.25, 0.25, 0.35, 0.85, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.85, 0.8, 0.7, 0.65, 0.65, 0.15,
              0.15,
              0.3, 0.3, 0.55, 0.8, 0.8, 0.75, 0.7, 0.6, 0.35, 0.2, 0.15, 0.15, 0.2, 0.25, 0.45, 0.7, 0.75, 0.85, 0.5,
              0.5,
              0.4, 0.45, 0.8, 0.75, 0.7, 0.55, 0.4, 0.25, 0.15, 0.05, 0.05, 0.05, 0.05, 0.1, 0.2, 0.4, 0.55, 0.7, 0.55,
              0.55, 0.45, 0.55, 0.65, 0.6, 0.4, 0.3, 0.1, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.35, 0.4, 0.45,
              0.55,
              0.55, 0.65, 0.65, 0.5, 0.5, 0.3, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.15, 0.45, 0.55, 0.55,
              0.55,
              0.55, 0.65, 0.65, 0.55, 0.5, 0.35, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.15, 0.25, 0.55, 0.6, 0.65,
              0.55,
              0.55, 0.6, 0.6, 0.75, 0.6, 0.45, 0.3, 0.15, 0.05, 0.0, 0.1, 0.05, 0.15, 0.25, 0.35, 0.6, 0.75, 0.75, 0.75,
              0.4, 0.35, 0.3, 0.45, 0.6, 0.75, 0.7, 0.65, 0.45, 0.4, 0.2, 0.25, 0.3, 0.45, 0.5, 0.65, 0.7, 0.85, 0.75,
              0.65,
              0.3, 0.15, 0.1, 0.1, 0.45, 0.55, 0.65, 0.75, 0.7, 0.6, 0.55, 0.65, 0.5, 0.6, 0.85, 0.85, 0.75, 0.6, 0.4,
              0.2,
              0.05, 0.05, 0.0, 0.05, 0.15, 0.2, 0.25, 0.6, 0.7, 0.8, 0.85, 0.8, 0.9, 0.75, 0.65, 0.65, 0.65, 0.3, 0.25,
              0.25, 0.05, 0.05, 0.0, 0.0, 0.05, 0.1, 0.3, 0.5, 0.6, 0.9, 1.0, 0.85, 0.8, 0.8, 0.65, 0.65, 0.7, 0.55,
              0.4,
              0.3, 0.15, 0.15, 0.0, 0.0, 0.15, 0.4, 0.7, 0.9, 0.85, 0.65, 0.6, 0.55, 0.35, 0.25, 0.4, 0.65, 0.7, 0.8,
              0.7,
              0.65, 0.25, 0.25, 0.05, 0.1, 0.65, 0.8, 0.9, 0.85, 0.5, 0.4, 0.2, 0.1, 0.05, 0.05, 0.1, 0.15, 0.45, 0.8,
              0.85,
              0.8, 0.4, 0.3, 0.3, 0.35, 0.8, 0.85, 0.65, 0.5, 0.25, 0.1, 0.1, 0.05, 0.0, 0.0, 0.0, 0.05, 0.05, 0.3, 0.5,
              0.65, 0.6, 0.6, 0.6, 0.65, 0.7, 0.65, 0.35, 0.15, 0.15, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25,
              0.35,
              0.45, 0.85, 0.85, 0.7, 0.7, 0.55, 0.45, 0.35, 0.1, 0.05, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05,
              0.2,
              0.3, 0.9, 0.9, 0.7, 0.7, 0.5, 0.45, 0.3, 0.15, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.2,
              0.35,
              0.9, 0.9, 0.65, 0.7, 0.75, 0.6, 0.4, 0.15, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.3, 0.45, 0.75,
              0.9, 0.9, 0.5, 0.5, 0.8, 0.75, 0.8, 0.5, 0.25, 0.15, 0.1, 0.05, 0.05, 0.05, 0.1, 0.25, 0.4, 0.75, 0.75,
              0.9,
              0.7, 0.7, 0.15, 0.15, 0.75, 0.75, 0.8, 0.9, 0.95, 0.95, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.85, 0.75,
              0.7,
              0.25, 0.25]
 
    train9 = [0.0, 0.0, 0.2, 0.2, 0.25, 0.45, 0.7, 0.85, 0.95, 0.95, 1.0, 1.0, 1.0, 1.0, 1.0, 0.8, 0.8, 0.7, 0.25, 0.25,
              0.1, 0.1, 0.4, 0.85, 0.9, 0.8, 0.75, 0.65, 0.55, 0.4, 0.25, 0.1, 0.1, 0.3, 0.5, 0.65, 0.75, 0.85, 0.65,
              0.65,
              0.45, 0.45, 0.8, 0.8, 0.8, 0.6, 0.35, 0.25, 0.05, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.25, 0.45, 0.7, 0.85,
              0.8,
              0.65, 0.65, 0.8, 0.5, 0.35, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.05, 0.25, 0.4, 0.6, 0.85,
              0.85,
              0.9, 0.95, 0.5, 0.25, 0.2, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.5, 0.75, 0.9, 0.9,
              1.0,
              1.0, 0.45, 0.15, 0.1, 0.05, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.3, 0.5, 0.55, 0.8, 0.95, 0.95, 0.9,
              0.9,
              0.55, 0.3, 0.2, 0.15, 0.05, 0.05, 0.05, 0.05, 0.05, 0.25, 0.3, 0.4, 0.45, 0.75, 0.85, 0.9, 0.8, 0.75,
              0.65,
              0.8, 0.85, 0.8, 0.6, 0.5, 0.4, 0.3, 0.3, 0.35, 0.5, 0.65, 0.65, 0.8, 0.8, 0.8, 0.9, 0.85, 0.6, 0.5, 0.25,
              0.35, 0.55, 0.6, 0.7, 0.65, 0.55, 0.5, 0.65, 0.55, 0.55, 0.65, 0.6, 0.55, 0.65, 0.8, 0.9, 0.85, 0.35,
              0.35,
              0.1, 0.1, 0.2, 0.2, 0.3, 0.3, 0.4, 0.4, 0.35, 0.3, 0.3, 0.25, 0.45, 0.5, 0.7, 0.8, 0.8, 0.55, 0.3, 0.25,
              0.0,
              0.0, 0.05, 0.15, 0.15, 0.2, 0.2, 0.15, 0.15, 0.15, 0.2, 0.2, 0.2, 0.6, 0.65, 0.7, 0.55, 0.4, 0.15, 0.15,
              0.0,
              0.0, 0.0, 0.0, 0.1, 0.1, 0.1, 0.1, 0.1, 0.15, 0.15, 0.25, 0.45, 0.55, 0.7, 0.6, 0.5, 0.4, 0.1, 0.1, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.0, 0.0, 0.05, 0.1, 0.1, 0.4, 0.5, 0.5, 0.55, 0.6, 0.5, 0.4, 0.35, 0.05, 0.05, 0.0, 0.0,
              0.0,
              0.0, 0.0, 0.0, 0.05, 0.1, 0.15, 0.25, 0.5, 0.65, 0.7, 0.55, 0.5, 0.35, 0.25, 0.15, 0.0, 0.0, 0.0, 0.0,
              0.0,
              0.0, 0.05, 0.05, 0.1, 0.2, 0.3, 0.3, 0.5, 0.65, 0.55, 0.45, 0.3, 0.2, 0.15, 0.1, 0.0, 0.0, 0.0, 0.0, 0.0,
              0.05, 0.1, 0.1, 0.15, 0.25, 0.4, 0.45, 0.4, 0.45, 0.4, 0.4, 0.3, 0.2, 0.15, 0.15, 0.0, 0.0, 0.0, 0.0, 0.1,
              0.1, 0.15, 0.2, 0.35, 0.55, 0.5, 0.55, 0.45, 0.45, 0.4, 0.35, 0.3, 0.15, 0.15, 0.1, 0.0, 0.0, 0.0, 0.0,
              0.15,
              0.15, 0.2, 0.2, 0.35, 0.4, 0.5, 0.5, 0.35, 0.3, 0.25, 0.2, 0.2, 0.1, 0.1, 0.05, 0.0, 0.0, 0.05, 0.05, 0.2,
              0.2, 0.35, 0.3, 0.45, 0.3, 0.35, 0.35, 0.25, 0.25, 0.15, 0.15, 0.15, 0.05, 0.05, 0.05, 0.0, 0.0, 0.1, 0.1,
              0.25, 0.3, 0.4, 0.3, 0.4, 0.3, 0.35, 0.4, 0.25, 0.25, 0.15, 0.15, 0.15, 0.1, 0.05, 0.05, 0.0, 0.0]
    train33 = [0.2, 0.2, 0.26666666666666666, 0.26666666666666666, 0.4, 0.5333333333333333, 0.6, 0.6, 0.7333333333333333, 0.6666666666666666, 0.7333333333333333, 0.8, 0.6666666666666666, 0.7333333333333333, 0.6, 0.4666666666666667, 0.4666666666666667, 0.4666666666666667, 0.2, 0.13333333333333333, 0.2, 0.26666666666666666, 0.3333333333333333, 0.3333333333333333, 0.2, 0.26666666666666666, 0.3333333333333333, 0.4, 0.5333333333333333, 0.6, 0.6, 0.6666666666666666, 0.6666666666666666, 0.6, 0.6666666666666666, 0.4, 0.3333333333333333, 0.4666666666666667, 0.4, 0.2, 0.13333333333333333, 0.13333333333333333, 0.13333333333333333, 0.06666666666666667, 0.13333333333333333, 0.13333333333333333, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.4666666666666667, 0.4, 0.4, 0.4666666666666667, 0.3333333333333333, 0.4666666666666667, 0.4666666666666667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.2, 0.13333333333333333, 0.13333333333333333, 0.26666666666666666, 0.4, 0.4, 0.2, 0.4666666666666667, 0.4666666666666667, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.13333333333333333, 0.26666666666666666, 0.4, 0.3333333333333333, 0.3333333333333333, 0.3333333333333333, 0.4666666666666667, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.13333333333333333, 0.06666666666666667, 0.2, 0.26666666666666666, 0.4, 0.2, 0.4666666666666667, 0.6666666666666666, 0.4, 0.4, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.13333333333333333, 0.13333333333333333, 0.13333333333333333, 0.2, 0.3333333333333333, 0.4, 0.4, 0.6666666666666666, 0.6666666666666666, 0.6, 0.3333333333333333, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.2, 0.26666666666666666, 0.26666666666666666, 0.3333333333333333, 0.4, 0.5333333333333333, 0.8, 0.7333333333333333, 0.8666666666666667, 0.8, 0.6666666666666666, 0.4666666666666667, 0.3333333333333333, 0.13333333333333333, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.26666666666666666, 0.26666666666666666, 0.3333333333333333, 0.4, 0.4, 0.7333333333333333, 0.8, 0.8666666666666667, 0.8666666666666667, 0.7333333333333333, 0.6666666666666666, 0.4666666666666667, 0.4, 0.2, 0.13333333333333333, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.2, 0.3333333333333333, 0.4, 0.4, 0.4666666666666667, 0.4666666666666667, 0.4666666666666667, 0.6, 0.6, 0.6666666666666666, 0.5333333333333333, 0.4, 0.4666666666666667, 0.3333333333333333, 0.3333333333333333, 0.2, 0.2, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.26666666666666666, 0.3333333333333333, 0.4, 0.4666666666666667, 0.5333333333333333, 0.4666666666666667, 0.4666666666666667, 0.6, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.4, 0.3333333333333333, 0.26666666666666666, 0.2, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.13333333333333333, 0.2, 0.26666666666666666, 0.26666666666666666, 0.26666666666666666, 0.3333333333333333, 0.4666666666666667, 0.5333333333333333, 0.5333333333333333, 0.5333333333333333, 0.6666666666666666, 0.4666666666666667, 0.26666666666666666, 0.26666666666666666, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.2, 0.4, 0.5333333333333333, 0.6, 0.6666666666666666, 0.6, 0.4, 0.3333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.13333333333333333, 0.13333333333333333, 0.4, 0.6666666666666666, 0.6666666666666666, 0.6, 0.5333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.26666666666666666, 0.6, 0.8, 0.6, 0.5333333333333333, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.4, 0.6, 0.7333333333333333, 0.6666666666666666, 0.6, 0.0, 0.0, 0.0, 0.0, 0.0, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.06666666666666667, 0.0, 0.0, 0.06666666666666667, 0.2, 0.4, 0.5333333333333333, 0.6666666666666666, 0.7333333333333333, 0.5333333333333333, 0.4666666666666667, 0.26666666666666666, 0.26666666666666666, 0.13333333333333333, 0.13333333333333333, 0.13333333333333333, 0.13333333333333333, 0.2, 0.2, 0.2, 0.26666666666666666, 0.26666666666666666, 0.26666666666666666, 0.3333333333333333, 0.4666666666666667, 0.6, 0.6666666666666666, 0.7333333333333333, 0.6666666666666666, 0.3333333333333333, 0.3333333333333333, 0.6, 0.6, 0.6, 0.6, 0.5333333333333333, 0.6, 0.6666666666666666, 0.6, 0.6666666666666666, 0.7333333333333333, 0.6666666666666666, 0.6666666666666666, 0.7333333333333333, 0.7333333333333333, 0.8666666666666667, 0.8, 0.7333333333333333, 0.4666666666666667, 0.3333333333333333, 0.2, 0.6666666666666666, 0.6666666666666666, 0.7333333333333333, 0.8, 0.8666666666666667, 0.8666666666666667, 0.8666666666666667, 0.8666666666666667, 0.7333333333333333, 0.7333333333333333, 0.7333333333333333, 0.6666666666666666, 0.6, 0.7333333333333333, 0.6666666666666666, 0.5333333333333333, 0.4, 0.3333333333333333, 0.13333333333333333, 0.13333333333333333]

    return([train0, train1, train2, train33, train4, train5, train6, train7, train8, train9])
train = praparing_data_set()
 
 
# input: 2d; output: 2d
 
# training programme
# a = []
# for i in range(20):
#     a.append(get_graph())
# print(average(a))
 
 
# --- MAIN ---
 
print('1-Train 2-Write')
if int(input('')) == 1:
    print('How many times you would like to train this time?')
    training_times = int(input(''))
    a = []
    for i in range(training_times):
        a.append(from_2d_to_1d(stectch(cut(from_1d_to_2d(get_graph(), 20, 20)))))
    print(average(a))
else:
    print('')
    print('Please write a number in the middle of the small screen.')
    inputted_graph = from_2d_to_1d(stectch(cut(from_1d_to_2d(get_graph(), 20, 20))))
    distances = []
    num = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
    for i in range(10):
        distances.append(distance(inputted_graph, train[i]))
 
    for i in range(10):
        for j in range(0, 10 - i - 1):
            if distances[j] > distances[j + 1]:
                distances[j], distances[j + 1] = distances[j + 1], distances[j]
                num[j], num[j + 1] = num[j + 1], num[j]
 
    print(distances)
    print(num)
 
    print('The number that you wrote might be ' + str(num[0]) + '.')
